{"ast":null,"code":"import { restaurantsActions } from \"./restaurants-slice\";\nimport { notificationActions } from \"./notification-slice\";\nexport const getRestaurantsData = () => {\n  return async dispatch => {\n    const fetchDats = async () => {\n      const response = await fetch('http://localhost:3005/restaurants');\n      console.log(\"get 0 \", data);\n\n      if (!response.ok) {\n        throw new Error('not able to get data!!! ');\n      }\n\n      const data = await response.json;\n      console.log(\"get 0 \", data);\n      return data;\n    };\n\n    try {\n      const restaurants = await fetchDats();\n      console.log(\"get \", restaurants);\n      dispatch(restaurantsActions.getRestaurants(restaurants));\n    } catch (error) {\n      dispatch(notificationActions.showNotification({\n        status: 'error',\n        title: 'error',\n        message: 'failed to add restaruant'\n      }));\n    }\n  };\n};\nexport const postRestaurantsData = restaurant => {\n  return async dispatch => {\n    dispatch(notificationActions.showNotification({\n      status: 'pending',\n      title: 'adding',\n      message: 'addin new restaurant'\n    }));\n\n    const postData = async () => {\n      const response = await fetch('http://localhost:3005/restaurants/postRestaurant', {\n        method: 'POST',\n        body: JSON.stringify(restaurant)\n      });\n\n      if (!response.ok) {\n        throw new Error('not able to get data!!! ');\n      }\n    };\n\n    try {\n      await postData();\n      dispatch(notificationActions.showNotification({\n        status: 'success',\n        title: 'success',\n        message: 'success to add  new restaurant'\n      }));\n    } catch (error) {\n      dispatch(notificationActions.showNotification({\n        status: 'error',\n        title: 'error',\n        message: 'failed to add restaruant'\n      }));\n    }\n  };\n};","map":{"version":3,"sources":["/Users/pavelshmilevich/Documents/Dev/Restaurant/front/src/Epicure/store/restuarants.actions.ts"],"names":["restaurantsActions","notificationActions","getRestaurantsData","dispatch","fetchDats","response","fetch","console","log","data","ok","Error","json","restaurants","getRestaurants","error","showNotification","status","title","message","postRestaurantsData","restaurant","postData","method","body","JSON","stringify"],"mappings":"AACA,SAAQA,kBAAR,QAAiC,qBAAjC;AACA,SAAQC,mBAAR,QAAkC,sBAAlC;AACA,OAAO,MAAMC,kBAAkB,GAAC,MAAI;AAChC,SAAO,MAAOC,QAAP,IAAuB;AAC1B,UAAMC,SAAS,GAAE,YAAS;AACtB,YAAMC,QAAQ,GAAC,MAAMC,KAAK,CAAC,mCAAD,CAA1B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBC,IAArB;;AACA,UAAG,CAACJ,QAAQ,CAACK,EAAb,EAAgB;AACZ,cAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACD;;AACH,YAAMF,IAAI,GAAC,MAAMJ,QAAQ,CAACO,IAA1B;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBC,IAArB;AACA,aAAOA,IAAP;AACH,KATD;;AAUA,QAAG;AACC,YAAMI,WAAW,GAAC,MAAMT,SAAS,EAAjC;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBK,WAAnB;AACAV,MAAAA,QAAQ,CAACH,kBAAkB,CAACc,cAAnB,CAAkCD,WAAlC,CAAD,CAAR;AACH,KAJD,CAIE,OAAME,KAAN,EAAY;AACVZ,MAAAA,QAAQ,CAACF,mBAAmB,CAACe,gBAApB,CAAqC;AAC1CC,QAAAA,MAAM,EAAC,OADmC;AAE1CC,QAAAA,KAAK,EAAC,OAFoC;AAG1CC,QAAAA,OAAO,EAAE;AAHiC,OAArC,CAAD,CAAR;AAKH;AACJ,GAtBD;AAuBH,CAxBM;AA0BP,OAAO,MAAMC,mBAAmB,GAAEC,UAAD,IAAyB;AACtD,SAAO,MAAOlB,QAAP,IAAuB;AAC1BA,IAAAA,QAAQ,CAACF,mBAAmB,CAACe,gBAApB,CAAqC;AACzCC,MAAAA,MAAM,EAAC,SADkC;AAEzCC,MAAAA,KAAK,EAAC,QAFmC;AAGzCC,MAAAA,OAAO,EAAE;AAHgC,KAArC,CAAD,CAAR;;AAKA,UAAMG,QAAQ,GAAE,YAAS;AACrB,YAAMjB,QAAQ,GAAE,MAAMC,KAAK,CAAC,kDAAD,EAAoD;AAC3EiB,QAAAA,MAAM,EAAE,MADmE;AAE3EC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,UAAf;AAFqE,OAApD,CAA3B;;AAIE,UAAG,CAAChB,QAAQ,CAACK,EAAb,EAAgB;AACd,cAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACD;AACN,KARD;;AASA,QAAG;AACC,YAAMW,QAAQ,EAAd;AACAnB,MAAAA,QAAQ,CAACF,mBAAmB,CAACe,gBAApB,CAAqC;AAC1CC,QAAAA,MAAM,EAAC,SADmC;AAE1CC,QAAAA,KAAK,EAAC,SAFoC;AAG1CC,QAAAA,OAAO,EAAE;AAHiC,OAArC,CAAD,CAAR;AAKH,KAPD,CAOE,OAAMJ,KAAN,EAAY;AACVZ,MAAAA,QAAQ,CAACF,mBAAmB,CAACe,gBAApB,CAAqC;AAC1CC,QAAAA,MAAM,EAAC,OADmC;AAE1CC,QAAAA,KAAK,EAAC,OAFoC;AAG1CC,QAAAA,OAAO,EAAE;AAHiC,OAArC,CAAD,CAAR;AAKH;AACJ,GA7BD;AA8BH,CA/BM","sourcesContent":["import Restaurant from \"../types/Restaurant\";\nimport {restaurantsActions} from \"./restaurants-slice\"\nimport {notificationActions} from \"./notification-slice\"\nexport const getRestaurantsData=()=>{\n    return async (dispatch:any) =>{\n        const fetchDats =async()=>{\n            const response=await fetch('http://localhost:3005/restaurants');\n            console.log(\"get 0 \",data);\n            if(!response.ok){\n                throw new Error('not able to get data!!! '); \n              }\n            const data=await response.json;\n            console.log(\"get 0 \",data);\n            return data;\n        }\n        try{\n            const restaurants=await fetchDats();\n            console.log(\"get \",restaurants);\n            dispatch(restaurantsActions.getRestaurants(restaurants));\n        } catch(error){\n            dispatch(notificationActions.showNotification({\n                status:'error',\n                title:'error',\n                message: 'failed to add restaruant',\n              }))\n        }\n    } \n}\n\nexport const postRestaurantsData=(restaurant:Restaurant)=>{\n    return async (dispatch:any) =>{\n        dispatch(notificationActions.showNotification({\n             status:'pending',\n             title:'adding',\n             message: 'addin new restaurant',\n        }))\n        const postData =async()=>{\n            const response= await fetch('http://localhost:3005/restaurants/postRestaurant',{\n                method: 'POST',\n                body: JSON.stringify(restaurant),\n              });            \n              if(!response.ok){\n                throw new Error('not able to get data!!! '); \n              }\n        }\n        try{\n            await postData();\n            dispatch(notificationActions.showNotification({\n                status:'success',\n                title:'success',\n                message: 'success to add  new restaurant',\n           }))\n        } catch(error){\n            dispatch(notificationActions.showNotification({\n                status:'error',\n                title:'error',\n                message: 'failed to add restaruant',\n              }))\n        }\n    } \n}\n          \n        \n    \n"]},"metadata":{},"sourceType":"module"}