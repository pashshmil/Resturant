{"ast":null,"code":"var _jsxFileName = \"/Users/pavelshmilevich/Documents/Dev/Restaurant/front/src/Epicure/auth/auth.tsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './auth.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Auth() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth.isAuth);\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isValidMail, setIsValidMail] = useState(true);\n  const [isValidPassword, setIsValidPassword] = useState(true);\n  const [isTouchedMail, setisTouchedMail] = useState(false);\n  const [isTouchedPassword, setisTouchedPassword] = useState(false);\n  const [isValidForm, setIsValidForm] = useState(false);\n\n  const submitHandler = event => {\n    _s();\n\n    event.preventDefault(); // checkAuth();\n    //get restaurants\n\n    useEffect(() => {\n      dispatch(getRestaurantsData());\n    }, [dispatch]); // dispatch(authActions.login());\n    // history.push(\"/home\");\n  };\n\n  _s(submitHandler, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  const emailInputChangeHandler = event => {\n    setisTouchedMail(true);\n    setEmail(event.target.value);\n\n    if (event.target.value.trim() === '') {\n      setIsValidMail(false);\n      return;\n    }\n\n    setIsValidMail(true);\n\n    if (isValidPassword && isTouchedPassword) {\n      setIsValidForm(true);\n    } else {\n      setIsValidForm(false);\n    }\n  };\n\n  const passwordInputChangeHandler = event => {\n    setisTouchedPassword(true);\n    setPassword(event.target.value);\n\n    if (event.target.value.trim() === '') {\n      setIsValidPassword(false);\n      return;\n    }\n\n    setIsValidPassword(true);\n\n    if (isValidMail && isTouchedMail) {\n      setIsValidForm(true);\n    } else {\n      setIsValidForm(false);\n    }\n  };\n\n  const inputMailClasses = !isValidMail && isTouchedMail ? 'form-control invalid' : 'form-control';\n  const inputPasswordClasses = !isValidPassword && isTouchedPassword ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    className: \"login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: inputMailClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 55\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        className: \"input\",\n        type: \"text\",\n        id: \"email\",\n        onChange: emailInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), !isValidMail && isTouchedMail && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"not-valid\",\n      children: \"mail is not valid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 49\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: inputPasswordClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 61\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: password,\n        className: \"input\",\n        type: \"text\",\n        id: \"password\",\n        onChange: passwordInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), !isValidPassword && isTouchedPassword && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"not-valid\",\n      children: \"password is not valid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 55\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-action\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !isValidForm,\n        className: \"btn\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Auth, \"nKLe2lIf37iLp0FukW7cy16GmG0=\", false, function () {\n  return [useDispatch, useSelector, useHistory];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/pavelshmilevich/Documents/Dev/Restaurant/front/src/Epicure/auth/auth.tsx"],"names":["React","useState","useEffect","useDispatch","useSelector","useHistory","Auth","dispatch","auth","state","isAuth","history","email","setEmail","password","setPassword","isValidMail","setIsValidMail","isValidPassword","setIsValidPassword","isTouchedMail","setisTouchedMail","isTouchedPassword","setisTouchedPassword","isValidForm","setIsValidForm","submitHandler","event","preventDefault","getRestaurantsData","emailInputChangeHandler","target","value","trim","passwordInputChangeHandler","inputMailClasses","inputPasswordClasses"],"mappings":"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","sourcesContent":["import React,{useRef,useState, useLayoutEffect, useEffect} from 'react';\nimport './auth.scss';\nimport {useDispatch, useSelector} from 'react-redux'\nimport { authActions } from '../store/auth-slice';\nimport { useHistory } from 'react-router-dom';\nfunction Auth() {\nconst dispatch=useDispatch();\nconst auth=useSelector((state:any) => state.auth.isAuth);\nconst history = useHistory()\nconst [email,setEmail]=useState('');\nconst [password,setPassword]=useState('');\nconst [isValidMail,setIsValidMail]=useState(true); \nconst [isValidPassword,setIsValidPassword]=useState(true);\nconst [isTouchedMail,setisTouchedMail]=useState(false); \nconst [isTouchedPassword,setisTouchedPassword]=useState(false);  \nconst [isValidForm,setIsValidForm]=useState(false); \nconst submitHandler = (event: any) =>{\n    event.preventDefault();\n    // checkAuth();\n     //get restaurants\n    useEffect(()=>{\n        dispatch(getRestaurantsData());\n    },[dispatch])\n    // dispatch(authActions.login());\n    // history.push(\"/home\");\n}\n\nconst emailInputChangeHandler=(event:any)=>{\n    setisTouchedMail(true);\n    setEmail(event.target.value);\n    if(event.target.value.trim ()===''){\n        setIsValidMail(false);\n        return;\n    }\n    setIsValidMail(true);\n    if(isValidPassword && isTouchedPassword){\n        setIsValidForm(true);\n    } else{\n        setIsValidForm(false);\n    }\n}\n\nconst passwordInputChangeHandler=(event:any)=>{\n    setisTouchedPassword(true);\n    setPassword(event.target.value);\n    if(event.target.value.trim()===''){\n        setIsValidPassword(false);\n        return;\n    }\n    setIsValidPassword(true);\n    if(isValidMail && isTouchedMail){\n        setIsValidForm(true);\n    } else{\n        setIsValidForm(false);\n    }\n}\n\nconst inputMailClasses= !isValidMail && isTouchedMail ? 'form-control invalid': 'form-control'; \nconst inputPasswordClasses= !isValidPassword && isTouchedPassword? 'form-control invalid': 'form-control'; \n\nreturn (\n    <form onSubmit={submitHandler} className=\"login-form\">\n            <div className={inputMailClasses}>\n                <label htmlFor='email'>Email  </label><br/>\n                <input value={email} className='input' type=\"text\" id=\"email\" onChange={emailInputChangeHandler}/>\n            </div>\n            {(!isValidMail && isTouchedMail) && <p className='not-valid'>mail is not valid</p>}\n            <div className={inputPasswordClasses}>\n                <label htmlFor='password'>Password  </label><br/>\n                <input value={password} className='input' type=\"text\" id=\"password\" onChange={passwordInputChangeHandler}/>\n            </div>\n            {!isValidPassword && isTouchedPassword && <p className='not-valid'>password is not valid</p>}\n            <div className='form-action'>\n                <button disabled={!isValidForm} className='btn'>Submit</button>\n            </div>\n    </form>\n  );\n}\n\nexport default Auth\n"]},"metadata":{},"sourceType":"module"}