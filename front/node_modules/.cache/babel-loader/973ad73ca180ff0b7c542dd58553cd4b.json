{"ast":null,"code":"var _jsxFileName = \"/Users/pavelshmilevich/Documents/Dev/Restaurant/front/src/Epicure/components/Main/Restaurants/Restaurants.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './Restaurants.scss';\nimport RestaurantCard from \"../../Shared/Cards/RestaurantCard\";\n// import {restaurantsActions } from '../../../store/store' \nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Restaurants() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [restaurants, setRestaurants] = useState([]);\n  const [chefs, setChefs] = useState([]);\n  const res = useSelector(state => state.restaurants.restaurants); // console.log(\"res check \",res)\n\n  useEffect(() => {\n    restaurn.map(item => {\n      for (let chef of chefsData) {\n        if (chef.id === item.chef_id) {\n          setRestaurants(currentArray => [...currentArray, {\n            id: item.id,\n            name: item.name,\n            chef: chef.name,\n            src: item.src\n          }]);\n        }\n      }\n    });\n\n    const fetchData = async () => {\n      const chefs = await fetch('http://localhost:3005/chefs');\n      const chefsData = await chefs.json();\n\n      const fetchRestaurants = async () => {\n        const response = await fetch('http://localhost:3005/restaurants');\n        const responseData = await response.json();\n        responseData.map(item => {\n          for (let chef of chefsData) {\n            if (chef.id === item.chef_id) {\n              setRestaurants(currentArray => [...currentArray, {\n                id: item.id,\n                name: item.name,\n                chef: chef.name,\n                src: item.src\n              }]);\n            }\n          }\n        });\n      }; // fetchRestaurants();\n\n    }; // fetchData();\n\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cards\",\n    children: restaurants.length > 0 && restaurants.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(RestaurantCard, {\n          name: item.name,\n          chef: item.chef,\n          src: item.src,\n          id: item.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Restaurants, \"eWY2sxuhxfWbdKip7kegcSvahvw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Restaurants;\nexport default Restaurants;\n\nvar _c;\n\n$RefreshReg$(_c, \"Restaurants\");","map":{"version":3,"sources":["/Users/pavelshmilevich/Documents/Dev/Restaurant/front/src/Epicure/components/Main/Restaurants/Restaurants.tsx"],"names":["React","useEffect","useState","RestaurantCard","useDispatch","useSelector","Restaurants","dispatch","restaurants","setRestaurants","chefs","setChefs","res","state","restaurn","map","item","chef","chefsData","id","chef_id","currentArray","name","src","fetchData","fetch","json","fetchRestaurants","response","responseData","length","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './Restaurants.scss';\nimport restaurantsJson from \"../../../../assets/data/restaurants.json\";\nimport chefsJson from \"../../../../assets/data/chefs.json\";\nimport RestaurantCard from \"../../Shared/Cards/RestaurantCard\";\nimport ChefOfWeek from \"../Home/ChefOfWeek/ChefOfWeek\";\nimport Chef from \"../../../types/Chef\";\nimport Restaurant from \"../../../types/Restaurant\";\n// import {restaurantsActions } from '../../../store/store' \nimport {useDispatch,useSelector} from 'react-redux'\n\nfunction Restaurants() {\n  const dispatch=useDispatch();\n\n  const [restaurants, setRestaurants] = useState<{ id:number,name: string, chef: string,src:string }[]>([]);\n  const [chefs, setChefs] = useState< Chef []>([]);\n  const res=useSelector((state:any) => state.restaurants.restaurants);\n  // console.log(\"res check \",res)\n  useEffect(() => {\n    restaurn.map((item:any) => {\n      for (let chef of chefsData) {\n        if (chef.id === item.chef_id) {\n          setRestaurants((currentArray:any) => [...currentArray, { id:item.id,name: item.name, chef: chef.name,src:item.src }])\n        }\n      }\n    });\n    \n    const fetchData=async()=>{\n    const chefs=await fetch('http://localhost:3005/chefs');\n    const chefsData=await chefs.json();\n    const fetchRestaurants=async()=>{\n      const response=await fetch('http://localhost:3005/restaurants');\n      const responseData=await response.json();\n      responseData.map((item:any) => {\n        for (let chef of chefsData) {\n          if (chef.id === item.chef_id) {\n            setRestaurants((currentArray:any) => [...currentArray, { id:item.id,name: item.name, chef: chef.name,src:item.src }])\n          }\n        }\n      });\n    }\n    // fetchRestaurants();\n    } \n    // fetchData();\n  },[]);\n    \n  return (\n  <div className=\"cards\">\n    {restaurants.length > 0 &&\n      restaurants.map((item, index) => {\n        return (\n          <section key={index}>\n            <RestaurantCard  name={item.name} chef={item.chef} src={item.src} id={item.id} />\n          </section>\n        );\n      })}\n  </div>\n  )\n}\nexport default Restaurants\n"]},"metadata":{},"sourceType":"module"}