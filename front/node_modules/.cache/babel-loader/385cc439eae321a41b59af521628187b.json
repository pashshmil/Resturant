{"ast":null,"code":"var _jsxFileName = \"/Users/pavelshmilevich/Documents/Dev/Restaurant/src/Epicure/components/Main/Restaurants/Restaurants.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './Restaurants.scss';\nimport restaurantsJson from \"../../../../assets/data/restaurants.json\";\nimport chefsJson from \"../../../../assets/data/chefs.json\";\nimport RestaurantCard from \"../../Shared/Cards/RestaurantCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Restaurants() {\n  _s();\n\n  const [restaurants, setRestaurants] = useState([]);\n  useEffect(() => {\n    restaurantsJson.map(item => {\n      for (let chef of chefsJson) {\n        if (chef.id === item.chef_id) {\n          setRestaurants(currentArray => [...currentArray, {\n            name: item.name,\n            chef: chef.name,\n            src: item.src\n          }]);\n        }\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cards\",\n    children: restaurants.length > 0 && restaurants.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(RestaurantCard, {\n          name: item.name,\n          chef: item.chef,\n          src: item.src\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Restaurants, \"UUwaAnmni1jVfIU2TonQ0iTwxYs=\");\n\n_c = Restaurants;\nexport default Restaurants;\n\nvar _c;\n\n$RefreshReg$(_c, \"Restaurants\");","map":{"version":3,"sources":["/Users/pavelshmilevich/Documents/Dev/Restaurant/src/Epicure/components/Main/Restaurants/Restaurants.tsx"],"names":["React","useEffect","useState","restaurantsJson","chefsJson","RestaurantCard","Restaurants","restaurants","setRestaurants","map","item","chef","id","chef_id","currentArray","name","src","length","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,oBAAP;AACA,OAAOC,eAAP,MAA4B,0CAA5B;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,cAAP,MAA2B,mCAA3B;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACrB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAA8C,EAA9C,CAA9C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,eAAe,CAACM,GAAhB,CAAqBC,IAAD,IAAU;AAC5B,WAAK,IAAIC,IAAT,IAAiBP,SAAjB,EAA4B;AAC1B,YAAIO,IAAI,CAACC,EAAL,KAAYF,IAAI,CAACG,OAArB,EAA8B;AAC5BL,UAAAA,cAAc,CAAEM,YAAD,IAAsB,CAAC,GAAGA,YAAJ,EAAkB;AAAEC,YAAAA,IAAI,EAAEL,IAAI,CAACK,IAAb;AAAmBJ,YAAAA,IAAI,EAAEA,IAAI,CAACI,IAA9B;AAAmCC,YAAAA,GAAG,EAACN,IAAI,CAACM;AAA5C,WAAlB,CAAvB,CAAd;AACD;AACF;AACF,KAND;AAOD,GARQ,EAQN,EARM,CAAT;AASA,sBACA;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cACGT,WAAW,CAACU,MAAZ,GAAqB,CAArB,IACCV,WAAW,CAACE,GAAZ,CAAgB,CAACC,IAAD,EAAOQ,KAAP,KAAiB;AAC/B,0BACE;AAAA,+BACA,QAAC,cAAD;AAAiB,UAAA,IAAI,EAAER,IAAI,CAACK,IAA5B;AAAkC,UAAA,IAAI,EAAEL,IAAI,CAACC,IAA7C;AAAmD,UAAA,GAAG,EAAED,IAAI,CAACM;AAA7D;AAAA;AAAA;AAAA;AAAA;AADA,SAAcE,KAAd;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KAND;AAFJ;AAAA;AAAA;AAAA;AAAA,UADA;AAYD;;GAvBQZ,W;;KAAAA,W;AAwBT,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './Restaurants.scss';\nimport restaurantsJson from \"../../../../assets/data/restaurants.json\";\nimport chefsJson from \"../../../../assets/data/chefs.json\";\nimport RestaurantCard from \"../../Shared/Cards/RestaurantCard\";\n\nfunction Restaurants() {\n  const [restaurants, setRestaurants] = useState<{ name: string, chef: string,src:string }[]>([]);\n  useEffect(() => {\n    restaurantsJson.map((item) => {\n      for (let chef of chefsJson) {\n        if (chef.id === item.chef_id) {\n          setRestaurants((currentArray:any) => [...currentArray, { name: item.name, chef: chef.name,src:item.src }])\n        }\n      }\n    });\n  }, []);\n  return (\n  <div className=\"cards\">\n    {restaurants.length > 0 &&\n      restaurants.map((item, index) => {\n        return (\n          <section key={index}>\n          <RestaurantCard  name={item.name} chef={item.chef} src={item.src} />\n          </section>\n        );\n      })}\n  </div>\n  )\n}\nexport default Restaurants\n"]},"metadata":{},"sourceType":"module"}