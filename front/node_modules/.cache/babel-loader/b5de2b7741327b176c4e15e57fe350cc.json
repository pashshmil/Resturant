{"ast":null,"code":"var _jsxFileName = \"/Users/pavelshmilevich/Documents/Dev/Restaurant/front/src/Epicure/auth/auth.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './auth.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Auth() {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isValidMail, setIsValidMail] = useState(false);\n  const [isValidPassword, setIsValidPassword] = useState(false);\n  const [isValidForm, setIsValidForm] = useState(false); // const emailRef=React.useRef<HTMLInputElement>(null); \n  // const passwordRef=useRef<HTMLInputElement>(null); \n\n  const submitHandler = event => {\n    event.preventDefault();\n    console.log(\"mail check \", email);\n    console.log(\"password check \", password);\n\n    if (email.trim() === '') {\n      setIsValidMail(false);\n      return;\n    }\n\n    setIsValidMail(true);\n\n    if (password.trim() === '') {\n      setIsValidPassword(false);\n      return;\n    }\n\n    setIsValidPassword(true);\n    setIsValidForm(true); // // if(!isValidForm \n    // setPassword('');\n    // setEmail('');\n  };\n\n  const emailInputChangeHandler = event => {\n    // console.log(\"email \",event.target.value);\n    setEmail(event.target.value);\n  };\n\n  const passwordInputChangeHandler = event => {\n    // console.log(\"password \",event.target.value);\n    setPassword(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    className: \"login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 55\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        className: \"input\",\n        type: \"text\",\n        id: \"email\",\n        onChange: emailInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), isValidMail, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 61\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: password,\n        className: \"input\",\n        type: \"text\",\n        id: \"password\",\n        onChange: passwordInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-action\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-btn\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Auth, \"j7t38HMPKS/cF93u+Jh23fLHShc=\");\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/pavelshmilevich/Documents/Dev/Restaurant/front/src/Epicure/auth/auth.tsx"],"names":["React","useState","Auth","email","setEmail","password","setPassword","isValidMail","setIsValidMail","isValidPassword","setIsValidPassword","isValidForm","setIsValidForm","submitHandler","event","preventDefault","console","log","trim","emailInputChangeHandler","target","value","passwordInputChangeHandler"],"mappings":"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","sourcesContent":["import React,{useRef,useState, useLayoutEffect} from 'react';\nimport './auth.scss';\n\nfunction Auth() {\nconst [email,setEmail]=useState('');\nconst [password,setPassword]=useState('');\nconst [isValidMail,setIsValidMail]=useState(false); \nconst [isValidPassword,setIsValidPassword]=useState(false); \nconst [isValidForm,setIsValidForm]=useState(false); \n// const emailRef=React.useRef<HTMLInputElement>(null); \n// const passwordRef=useRef<HTMLInputElement>(null); \nconst submitHandler = (event: any) =>{\n    event.preventDefault();\n    console.log(\"mail check \",email);\n    console.log(\"password check \",password);\n    if(email.trim()===''){\n        setIsValidMail(false);\n        return;\n    }\n    setIsValidMail(true);\n    if(password.trim()===''){\n        setIsValidPassword(false);\n        return;\n    }\n    setIsValidPassword(true);\n    setIsValidForm(true);\n    // // if(!isValidForm \n    // setPassword('');\n    // setEmail('');\n}\n\nconst emailInputChangeHandler=(event:any)=>{\n    // console.log(\"email \",event.target.value);\n    setEmail(event.target.value);\n}\n\nconst passwordInputChangeHandler=(event:any)=>{\n    // console.log(\"password \",event.target.value);\n    setPassword(event.target.value);\n}\n\nreturn (\n    <form onSubmit={submitHandler} className=\"login-form\">\n            <div className='form-control'>\n                <label htmlFor='email'>Email  </label><br/>\n                <input value={email} className='input' type=\"text\" id=\"email\" onChange={emailInputChangeHandler}/>\n            </div>\n            {isValidMail }\n            <div className='form-control'>\n                <label htmlFor='password'>Password  </label><br/>\n                <input value={password} className='input' type=\"text\" id=\"password\" onChange={passwordInputChangeHandler}/>\n            </div>\n            <div className='form-action'>\n                <button className='submit-btn'>Submit</button>\n            </div>\n    </form>\n  );\n}\n\nexport default Auth\n"]},"metadata":{},"sourceType":"module"}