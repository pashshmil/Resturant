{"ast":null,"code":"import { notificationActions } from \"./notification-slice\";\nimport { userActions } from \"./users-slice\";\nexport const getUserByCradentials = cradentials => {\n  return async dispatch => {\n    dispatch(notificationActions.showNotification({\n      status: 'pending',\n      title: 'check',\n      message: 'check user'\n    }));\n    console.log(\"user front\", cradentials);\n\n    const getData = async () => {\n      const response = await fetch(`http://localhost:3005/user/${cradentials.email}:${cradentials.password}`);\n\n      if (!response.ok) {\n        throw new Error('not able to get data!!! ');\n      }\n    };\n\n    try {\n      const user = await getData();\n      dispatch(userActions.getUser(user));\n    } catch (error) {\n      dispatch(notificationActions.showNotification({\n        status: 'error',\n        title: 'error',\n        message: 'failed to find user'\n      }));\n    }\n  };\n};","map":{"version":3,"sources":["/Users/pavelshmilevich/Documents/Dev/Restaurant/front/src/Epicure/store/users.actions.ts"],"names":["notificationActions","userActions","getUserByCradentials","cradentials","dispatch","showNotification","status","title","message","console","log","getData","response","fetch","email","password","ok","Error","user","getUser","error"],"mappings":"AAAA,SAAQA,mBAAR,QAAkC,sBAAlC;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAO,MAAMC,oBAAoB,GAAEC,WAAD,IAAmB;AACjD,SAAO,MAAOC,QAAP,IAAuB;AAC1BA,IAAAA,QAAQ,CAACJ,mBAAmB,CAACK,gBAApB,CAAqC;AACzCC,MAAAA,MAAM,EAAC,SADkC;AAEzCC,MAAAA,KAAK,EAAC,OAFmC;AAGzCC,MAAAA,OAAO,EAAE;AAHgC,KAArC,CAAD,CAAR;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBP,WAAzB;;AACA,UAAMQ,OAAO,GAAE,YAAS;AACpB,YAAMC,QAAQ,GAAE,MAAMC,KAAK,CAAE,8BAA6BV,WAAW,CAACW,KAAM,IAAGX,WAAW,CAACY,QAAS,EAAzE,CAA3B;;AACA,UAAG,CAACH,QAAQ,CAACI,EAAb,EAAgB;AAChB,cAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACC;AACJ,KALD;;AAMA,QAAG;AACC,YAAMC,IAAI,GAAC,MAAMP,OAAO,EAAxB;AACAP,MAAAA,QAAQ,CAACH,WAAW,CAACkB,OAAZ,CAAoBD,IAApB,CAAD,CAAR;AACH,KAHD,CAGE,OAAME,KAAN,EAAY;AACVhB,MAAAA,QAAQ,CAACJ,mBAAmB,CAACK,gBAApB,CAAqC;AAC1CC,QAAAA,MAAM,EAAC,OADmC;AAE1CC,QAAAA,KAAK,EAAC,OAFoC;AAG1CC,QAAAA,OAAO,EAAE;AAHiC,OAArC,CAAD,CAAR;AAKH;AACJ,GAvBD;AAwBH,CAzBM","sourcesContent":["import {notificationActions} from \"./notification-slice\"\nimport { userActions } from \"./users-slice\";\nexport const getUserByCradentials=(cradentials:any)=>{\n    return async (dispatch:any) =>{\n        dispatch(notificationActions.showNotification({\n             status:'pending',\n             title:'check',\n             message: 'check user',\n        }))\n        console.log(\"user front\",cradentials);\n        const getData =async()=>{\n            const response= await fetch(`http://localhost:3005/user/${cradentials.email}:${cradentials.password}`);\n            if(!response.ok){\n            throw new Error('not able to get data!!! '); \n            }\n        }\n        try{\n            const user=await getData();\n            dispatch(userActions.getUser(user));\n        } catch(error){\n            dispatch(notificationActions.showNotification({\n                status:'error',\n                title:'error',\n                message: 'failed to find user',\n              }))\n        }\n    } \n}"]},"metadata":{},"sourceType":"module"}