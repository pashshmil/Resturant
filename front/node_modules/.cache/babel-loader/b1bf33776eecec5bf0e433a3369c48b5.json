{"ast":null,"code":"var _jsxFileName = \"/Users/pavelshmilevich/Documents/Dev/Restaurant/front/src/Epicure/components/Main/Restaurants/Restaurants.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './Restaurants.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Restaurants() {\n  _s();\n\n  const [restaurants, setRestaurants] = useState([]);\n  const [chefs, setChefs] = useState([]);\n  useEffect(() => {\n    const fetchChefs = async () => {\n      const response = await fetch('http://localhost:3005/chefs');\n      const responseData = await response.json();\n      setChefs(responseData);\n    };\n\n    fetchChefs();\n  }, []);\n  useEffect(() => {\n    // const fetchRestaurants=async()=>{\n    const response = fetch('http://localhost:3005/restaurants');\n    const responseData = response.json(); // console.log(\"restaurant \",responseData);\n\n    console.log(\"chef 2\", chefs);\n    chefs === null || chefs === void 0 ? void 0 : chefs.map(item => {\n      console.log(\"item \", item);\n    }); // }  \n  }, [chefs]); // responseData?.map((item:Restaurant) => {\n  //   console.log(\"item \",item);\n  //   console.log(\"chefs \",chefs);\n  //   for (let chef of chefs) {\n  //     console.log(\"chef \",chef);\n  //     if (chef.id === item.chef_id) {\n  //       // console.log(\"res check \",restaurants);\n  //       setRestaurants((currentArray:any) => [...currentArray, { id:item.id,name: item.name, chef: chef.name,src:item.src }])\n  //     }\n  //   }\n  // });\n  // restaurantsJson.map((item) => {\n  //   for (let chef of chefsJson) {\n  //     if (chef.id === item.chef_id) {\n  //       setRestaurants((currentArray:any) => [...currentArray, { id:item.id,name: item.name, chef: chef.name,src:item.src }])\n  //     }\n  //   }\n  // });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cards\",\n    children: restaurants.length > 0 && restaurants.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"section\", {}, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Restaurants, \"h62zfPhQGOcnuZRB2I1LT5kOAUY=\");\n\n_c = Restaurants;\nexport default Restaurants;\n\nvar _c;\n\n$RefreshReg$(_c, \"Restaurants\");","map":{"version":3,"sources":["/Users/pavelshmilevich/Documents/Dev/Restaurant/front/src/Epicure/components/Main/Restaurants/Restaurants.tsx"],"names":["React","useEffect","useState","Restaurants","restaurants","setRestaurants","chefs","setChefs","fetchChefs","response","fetch","responseData","json","console","log","map","item","length","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,oBAAP;;;AAQA,SAASC,WAAT,GAAuB;AAAA;;AACrB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCH,QAAQ,CAAwD,EAAxD,CAA9C;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAW,EAAX,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,UAAU,GAAC,YAAS;AACxB,YAAMC,QAAQ,GAAC,MAAMC,KAAK,CAAC,6BAAD,CAA1B;AACA,YAAMC,YAAY,GAAC,MAAMF,QAAQ,CAACG,IAAT,EAAzB;AACAL,MAAAA,QAAQ,CAACI,YAAD,CAAR;AACD,KAJD;;AAKAH,IAAAA,UAAU;AACX,GAPQ,EAON,EAPM,CAAT;AAUAP,EAAAA,SAAS,CAAC,MAAM;AACd;AACE,UAAMQ,QAAQ,GAACC,KAAK,CAAC,mCAAD,CAApB;AACA,UAAMC,YAAY,GAACF,QAAQ,CAACG,IAAT,EAAnB,CAHY,CAIZ;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBR,KAArB;AACAA,IAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAES,GAAP,CAAYC,IAAD,IAAa;AACtBH,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBE,IAApB;AACD,KAFD,EANY,CASd;AACD,GAVQ,EAUN,CAACV,KAAD,CAVM,CAAT,CAbqB,CAwBjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEF,sBACA;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cACGF,WAAW,CAACa,MAAZ,GAAqB,CAArB,IACCb,WAAW,CAACW,GAAZ,CAAgB,CAACC,IAAD,EAAOE,KAAP,KAAiB;AAC/B,0BACE,uBAAcA,KAAd;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KAND;AAFJ;AAAA;AAAA;AAAA;AAAA,UADA;AAYD;;GAzDQf,W;;KAAAA,W;AA0DT,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './Restaurants.scss';\nimport restaurantsJson from \"../../../../assets/data/restaurants.json\";\nimport chefsJson from \"../../../../assets/data/chefs.json\";\nimport RestaurantCard from \"../../Shared/Cards/RestaurantCard\";\nimport ChefOfWeek from \"../Home/ChefOfWeek/ChefOfWeek\";\nimport Chef from \"../../../types/Chef\";\nimport Restaurant from \"../../../types/Restaurant\";\n\nfunction Restaurants() {\n  const [restaurants, setRestaurants] = useState<{ id:number,name: string, chef: string,src:string }[]>([]);\n  const [chefs, setChefs] = useState< Chef []>([]);\n  useEffect(() => {\n    const fetchChefs=async()=>{\n      const response=await fetch('http://localhost:3005/chefs');\n      const responseData=await response.json();\n      setChefs(responseData);\n    } \n    fetchChefs();\n  }, []);\n  \n\n  useEffect(() => {\n    // const fetchRestaurants=async()=>{\n      const response=fetch('http://localhost:3005/restaurants');\n      const responseData=response.json();\n      // console.log(\"restaurant \",responseData);\n      console.log(\"chef 2\",chefs);\n      chefs?.map((item:Chef)=>{\n        console.log(\"item \",item);\n      });\n    // }  \n  }, [chefs]);\n      // responseData?.map((item:Restaurant) => {\n      //   console.log(\"item \",item);\n      //   console.log(\"chefs \",chefs);\n      //   for (let chef of chefs) {\n      //     console.log(\"chef \",chef);\n      //     if (chef.id === item.chef_id) {\n      //       // console.log(\"res check \",restaurants);\n      //       setRestaurants((currentArray:any) => [...currentArray, { id:item.id,name: item.name, chef: chef.name,src:item.src }])\n      //     }\n      //   }\n      // });\n    \n    \n    // restaurantsJson.map((item) => {\n    //   for (let chef of chefsJson) {\n    //     if (chef.id === item.chef_id) {\n    //       setRestaurants((currentArray:any) => [...currentArray, { id:item.id,name: item.name, chef: chef.name,src:item.src }])\n    //     }\n    //   }\n    // });\n    \n  return (\n  <div className=\"cards\">\n    {restaurants.length > 0 &&\n      restaurants.map((item, index) => {\n        return (\n          <section key={index}>\n            {/* <RestaurantCard  name={item.name} chef={item.chef} src={item.src} id={item.id} /> */}\n          </section>\n        );\n      })}\n  </div>\n  )\n}\nexport default Restaurants\n"]},"metadata":{},"sourceType":"module"}