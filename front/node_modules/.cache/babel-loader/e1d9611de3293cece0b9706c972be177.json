{"ast":null,"code":"var _jsxFileName = \"/Users/pavelshmilevich/Documents/Dev/Restaurant/front/src/Epicure/components/Main/Restaurants/Restaurants.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './Restaurants.scss';\nimport RestaurantCard from \"../../Shared/Cards/RestaurantCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Restaurants() {\n  _s();\n\n  const [restaurants, setRestaurants] = useState([]);\n  const [chefs, setChefs] = useState([]);\n\n  const restaurantsHandler = () => {};\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const chefs = await fetch('http://localhost:3005/chefs');\n      const chefsData = await chefs.json();\n\n      const fetchRestaurants = async () => {\n        const response = await fetch('http://localhost:3005/restaurants');\n        const responseData = await response.json();\n        responseData.map(item => {\n          for (let chef of chefsData) {\n            if (chef.id === item.chef_id) {\n              setRestaurants(currentArray => [...currentArray, {\n                id: item.id,\n                name: item.name,\n                chef: chef.name,\n                src: item.src\n              }]);\n            }\n          }\n        });\n      };\n\n      fetchRestaurants();\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cards\",\n    children: restaurants.length > 0 && restaurants.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(RestaurantCard, {\n          name: item.name,\n          chef: item.chef,\n          src: item.src,\n          id: item.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Restaurants, \"Vr8sqtR/UfuUPZAhRwUd0qD+O1Q=\");\n\n_c = Restaurants;\nexport default Restaurants;\n\nvar _c;\n\n$RefreshReg$(_c, \"Restaurants\");","map":{"version":3,"sources":["/Users/pavelshmilevich/Documents/Dev/Restaurant/front/src/Epicure/components/Main/Restaurants/Restaurants.tsx"],"names":["React","useEffect","useState","RestaurantCard","Restaurants","restaurants","setRestaurants","chefs","setChefs","restaurantsHandler","fetchData","fetch","chefsData","json","fetchRestaurants","response","responseData","map","item","chef","id","chef_id","currentArray","name","src","length","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,oBAAP;AAGA,OAAOC,cAAP,MAA2B,mCAA3B;;;AAKA,SAASC,WAAT,GAAuB;AAAA;;AACrB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAwD,EAAxD,CAA9C;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAW,EAAX,CAAlC;;AACA,QAAMO,kBAAkB,GAAC,MAAI,CAE5B,CAFD;;AAIAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,SAAS,GAAC,YAAS;AACzB,YAAMH,KAAK,GAAC,MAAMI,KAAK,CAAC,6BAAD,CAAvB;AACA,YAAMC,SAAS,GAAC,MAAML,KAAK,CAACM,IAAN,EAAtB;;AACA,YAAMC,gBAAgB,GAAC,YAAS;AAC9B,cAAMC,QAAQ,GAAC,MAAMJ,KAAK,CAAC,mCAAD,CAA1B;AACA,cAAMK,YAAY,GAAC,MAAMD,QAAQ,CAACF,IAAT,EAAzB;AACAG,QAAAA,YAAY,CAACC,GAAb,CAAkBC,IAAD,IAAc;AAC7B,eAAK,IAAIC,IAAT,IAAiBP,SAAjB,EAA4B;AAC1B,gBAAIO,IAAI,CAACC,EAAL,KAAYF,IAAI,CAACG,OAArB,EAA8B;AAC5Bf,cAAAA,cAAc,CAAEgB,YAAD,IAAsB,CAAC,GAAGA,YAAJ,EAAkB;AAAEF,gBAAAA,EAAE,EAACF,IAAI,CAACE,EAAV;AAAaG,gBAAAA,IAAI,EAAEL,IAAI,CAACK,IAAxB;AAA8BJ,gBAAAA,IAAI,EAAEA,IAAI,CAACI,IAAzC;AAA8CC,gBAAAA,GAAG,EAACN,IAAI,CAACM;AAAvD,eAAlB,CAAvB,CAAd;AACD;AACF;AACF,SAND;AAOD,OAVD;;AAWAV,MAAAA,gBAAgB;AACf,KAfD;;AAgBAJ,IAAAA,SAAS;AACV,GAlBQ,EAkBP,EAlBO,CAAT;AAoBA,sBACA;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cACGL,WAAW,CAACoB,MAAZ,GAAqB,CAArB,IACCpB,WAAW,CAACY,GAAZ,CAAgB,CAACC,IAAD,EAAOQ,KAAP,KAAiB;AAC/B,0BACE;AAAA,+BACE,QAAC,cAAD;AAAiB,UAAA,IAAI,EAAER,IAAI,CAACK,IAA5B;AAAkC,UAAA,IAAI,EAAEL,IAAI,CAACC,IAA7C;AAAmD,UAAA,GAAG,EAAED,IAAI,CAACM,GAA7D;AAAkE,UAAA,EAAE,EAAEN,IAAI,CAACE;AAA3E;AAAA;AAAA;AAAA;AAAA;AADF,SAAcM,KAAd;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KAND;AAFJ;AAAA;AAAA;AAAA;AAAA,UADA;AAYD;;GAvCQtB,W;;KAAAA,W;AAwCT,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './Restaurants.scss';\nimport restaurantsJson from \"../../../../assets/data/restaurants.json\";\nimport chefsJson from \"../../../../assets/data/chefs.json\";\nimport RestaurantCard from \"../../Shared/Cards/RestaurantCard\";\nimport ChefOfWeek from \"../Home/ChefOfWeek/ChefOfWeek\";\nimport Chef from \"../../../types/Chef\";\nimport Restaurant from \"../../../types/Restaurant\";\nimport {restaurantsActions } from '../../../store/store' \nfunction Restaurants() {\n  const [restaurants, setRestaurants] = useState<{ id:number,name: string, chef: string,src:string }[]>([]);\n  const [chefs, setChefs] = useState< Chef []>([]);\n  const restaurantsHandler=()=>{\n    \n  }\n  \n  useEffect(() => {\n    const fetchData=async()=>{\n    const chefs=await fetch('http://localhost:3005/chefs');\n    const chefsData=await chefs.json();\n    const fetchRestaurants=async()=>{\n      const response=await fetch('http://localhost:3005/restaurants');\n      const responseData=await response.json();\n      responseData.map((item:any) => {\n        for (let chef of chefsData) {\n          if (chef.id === item.chef_id) {\n            setRestaurants((currentArray:any) => [...currentArray, { id:item.id,name: item.name, chef: chef.name,src:item.src }])\n          }\n        }\n      });\n    }\n    fetchRestaurants();\n    } \n    fetchData();\n  },[]);\n    \n  return (\n  <div className=\"cards\">\n    {restaurants.length > 0 &&\n      restaurants.map((item, index) => {\n        return (\n          <section key={index}>\n            <RestaurantCard  name={item.name} chef={item.chef} src={item.src} id={item.id} />\n          </section>\n        );\n      })}\n  </div>\n  )\n}\nexport default Restaurants\n"]},"metadata":{},"sourceType":"module"}