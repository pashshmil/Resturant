{"ast":null,"code":"import restaurantsActions from \"./restaurants-slice\";\nimport notificationActions from \"./notification-slice\";\nexport const getRestaurantsData = data => {\n  return async dispatch => {\n    const fetchDats = async () => {\n      const response = await fetch('http://localhost:3005/restaurants');\n\n      if (!response.ok) {\n        throw new Error('not able to get data!!! ');\n      }\n\n      const data = await response.json;\n      return data;\n    };\n\n    try {\n      const restaurants = await fetchDats();\n      dispatch(restaurantsActions.getRestaurants(restaurants));\n    } catch (error) {\n      dispatch(notificationActions.showNotification({\n        status: 'error',\n        title: 'error',\n        message: 'failed to add restaruant'\n      }));\n    }\n  };\n};\nexport const postRestaurantsData = restaurant => {\n  return async dispatch => {\n    dispatch(notificationActions.showNotification({\n      status: 'pending',\n      title: 'adding',\n      message: 'addin new restaurant'\n    }));\n\n    const postData = async () => {\n      const response = await fetch('http://localhost:3005/restaurants/postRestaurant', {\n        method: 'POST',\n        body: JSON.stringify(restaurant)\n      });\n\n      if (!response.ok) {\n        throw new Error('not able to get data!!! ');\n      }\n\n      const data = await response.json;\n      return data;\n    };\n\n    try {\n      await postData();\n      dispatch(notificationActions.showNotification({\n        status: 'success',\n        title: 'success',\n        message: 'success to add  new restaurant'\n      }));\n    } catch (error) {\n      dispatch(notificationActions.showNotification({\n        status: 'error',\n        title: 'error',\n        message: 'failed to add restaruant'\n      }));\n    }\n  };\n}; //   if(!response.ok){\n//     throw new Error('failt to add'); \n//     dispatch(notificationActions.showNotification({\n//       status:'errror',\n//       title:'error',\n//       message: 'failed to add restaruant',\n//     }))\n//   }\n//   dispatch(notificationActions.showNotification({\n//     status:'success',\n//     title:'success',\n//     message: 'success successfuly',\n//   }))\n// }\n// addRestaurant().catch(error=>{\n//   dispatch(notificationActions.showNotification({\n//     status:'error',\n//     title:'error',\n//     message: 'failed to add restaruant',\n//   }))\n// });","map":{"version":3,"sources":["/Users/pavelshmilevich/Documents/Dev/Restaurant/front/src/Epicure/store/restuarants.actions.ts"],"names":["restaurantsActions","notificationActions","getRestaurantsData","data","dispatch","fetchDats","response","fetch","ok","Error","json","restaurants","getRestaurants","error","showNotification","status","title","message","postRestaurantsData","restaurant","postData","method","body","JSON","stringify"],"mappings":"AAEA,OAAOA,kBAAP,MAA+B,qBAA/B;AACA,OAAOC,mBAAP,MAAgC,sBAAhC;AACA,OAAO,MAAMC,kBAAkB,GAAEC,IAAD,IAAqB;AACjD,SAAO,MAAOC,QAAP,IAAmB;AACtB,UAAMC,SAAS,GAAE,YAAS;AACtB,YAAMC,QAAQ,GAAE,MAAMC,KAAK,CAAC,mCAAD,CAA3B;;AACA,UAAG,CAACD,QAAQ,CAACE,EAAb,EAAgB;AACZ,cAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACD;;AACH,YAAMN,IAAI,GAAC,MAAMG,QAAQ,CAACI,IAA1B;AACA,aAAOP,IAAP;AACH,KAPD;;AAQA,QAAG;AACC,YAAMQ,WAAW,GAAC,MAAMN,SAAS,EAAjC;AACAD,MAAAA,QAAQ,CAACJ,kBAAkB,CAACY,cAAnB,CAAkCD,WAAlC,CAAD,CAAR;AACH,KAHD,CAGE,OAAME,KAAN,EAAY;AACVT,MAAAA,QAAQ,CAACH,mBAAmB,CAACa,gBAApB,CAAqC;AAC1CC,QAAAA,MAAM,EAAC,OADmC;AAE1CC,QAAAA,KAAK,EAAC,OAFoC;AAG1CC,QAAAA,OAAO,EAAE;AAHiC,OAArC,CAAD,CAAR;AAKH;AACJ,GAnBD;AAoBH,CArBM;AAuBP,OAAO,MAAMC,mBAAmB,GAAEC,UAAD,IAAyB;AACtD,SAAO,MAAOf,QAAP,IAAuB;AAC1BA,IAAAA,QAAQ,CAACH,mBAAmB,CAACa,gBAApB,CAAqC;AACzCC,MAAAA,MAAM,EAAC,SADkC;AAEzCC,MAAAA,KAAK,EAAC,QAFmC;AAGzCC,MAAAA,OAAO,EAAE;AAHgC,KAArC,CAAD,CAAR;;AAKA,UAAMG,QAAQ,GAAE,YAAS;AACrB,YAAMd,QAAQ,GAAE,MAAMC,KAAK,CAAC,kDAAD,EAAoD;AAC3Ec,QAAAA,MAAM,EAAE,MADmE;AAE3EC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,UAAf;AAFqE,OAApD,CAA3B;;AAIE,UAAG,CAACb,QAAQ,CAACE,EAAb,EAAgB;AACd,cAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACD;;AACH,YAAMN,IAAI,GAAC,MAAMG,QAAQ,CAACI,IAA1B;AACA,aAAOP,IAAP;AACH,KAVD;;AAWA,QAAG;AACC,YAAMiB,QAAQ,EAAd;AACAhB,MAAAA,QAAQ,CAACH,mBAAmB,CAACa,gBAApB,CAAqC;AAC1CC,QAAAA,MAAM,EAAC,SADmC;AAE1CC,QAAAA,KAAK,EAAC,SAFoC;AAG1CC,QAAAA,OAAO,EAAE;AAHiC,OAArC,CAAD,CAAR;AAKH,KAPD,CAOE,OAAMJ,KAAN,EAAY;AACVT,MAAAA,QAAQ,CAACH,mBAAmB,CAACa,gBAApB,CAAqC;AAC1CC,QAAAA,MAAM,EAAC,OADmC;AAE1CC,QAAAA,KAAK,EAAC,OAFoC;AAG1CC,QAAAA,OAAO,EAAE;AAHiC,OAArC,CAAD,CAAR;AAKH;AACJ,GA/BD;AAgCH,CAjCM,C,CAoCC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import Restaurant from \"../types/Restaurant\";\nimport restaurantsSlice from \"./restaurants-slice\";\nimport restaurantsActions from \"./restaurants-slice\"\nimport notificationActions from \"./notification-slice\"\nexport const getRestaurantsData=(data:Restaurant[])=>{\n    return async (dispatch) =>{\n        const fetchDats =async()=>{\n            const response= await fetch('http://localhost:3005/restaurants')\n            if(!response.ok){\n                throw new Error('not able to get data!!! '); \n              }\n            const data=await response.json;\n            return data;\n        }\n        try{\n            const restaurants=await fetchDats();\n            dispatch(restaurantsActions.getRestaurants(restaurants));\n        } catch(error){\n            dispatch(notificationActions.showNotification({\n                status:'error',\n                title:'error',\n                message: 'failed to add restaruant',\n              }))\n        }\n    } \n}\n\nexport const postRestaurantsData=(restaurant:Restaurant)=>{\n    return async (dispatch:any) =>{\n        dispatch(notificationActions.showNotification({\n             status:'pending',\n             title:'adding',\n             message: 'addin new restaurant',\n        }))\n        const postData =async()=>{\n            const response= await fetch('http://localhost:3005/restaurants/postRestaurant',{\n                method: 'POST',\n                body: JSON.stringify(restaurant),\n              });            \n              if(!response.ok){\n                throw new Error('not able to get data!!! '); \n              }\n            const data=await response.json;\n            return data;\n        }\n        try{\n            await postData();\n            dispatch(notificationActions.showNotification({\n                status:'success',\n                title:'success',\n                message: 'success to add  new restaurant',\n           }))\n        } catch(error){\n            dispatch(notificationActions.showNotification({\n                status:'error',\n                title:'error',\n                message: 'failed to add restaruant',\n              }))\n        }\n    } \n}\n          \n        \n        //   if(!response.ok){\n        //     throw new Error('failt to add'); \n        //     dispatch(notificationActions.showNotification({\n        //       status:'errror',\n        //       title:'error',\n        //       message: 'failed to add restaruant',\n        //     }))\n        //   }\n        //   dispatch(notificationActions.showNotification({\n        //     status:'success',\n        //     title:'success',\n        //     message: 'success successfuly',\n        //   }))\n        // }\n       \n        // addRestaurant().catch(error=>{\n        //   dispatch(notificationActions.showNotification({\n        //     status:'error',\n        //     title:'error',\n        //     message: 'failed to add restaruant',\n        //   }))\n        // });\n"]},"metadata":{},"sourceType":"module"}