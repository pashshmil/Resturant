{"ast":null,"code":"import { notificationActions } from \"./notification-slice\";\nimport { userActions } from \"./users-slice\";\nexport const getUserByCradentials = cradentials => {\n  return async dispatch => {\n    dispatch(notificationActions.showNotification({\n      status: 'pending',\n      title: 'check',\n      message: 'check user'\n    }));\n    console.log(\"user front\", cradentials);\n\n    const getData = async () => {\n      const response = await fetch(`http://localhost:3005/user/${cradentials.email}${cradentials.password}`, {\n        method: 'POST',\n        body: {\n          'email': cradentials.email,\n          password: cradentials.password\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('not able to get data!!! ');\n      }\n    };\n\n    try {\n      const user = await getData();\n      dispatch(userActions.getUser(user));\n    } catch (error) {\n      dispatch(notificationActions.showNotification({\n        status: 'error',\n        title: 'error',\n        message: 'failed to find user'\n      }));\n    }\n  };\n};","map":{"version":3,"sources":["/Users/pavelshmilevich/Documents/Dev/Restaurant/front/src/Epicure/store/users.actions.ts"],"names":["notificationActions","userActions","getUserByCradentials","cradentials","dispatch","showNotification","status","title","message","console","log","getData","response","fetch","email","password","method","body","ok","Error","user","getUser","error"],"mappings":"AAAA,SAAQA,mBAAR,QAAkC,sBAAlC;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAO,MAAMC,oBAAoB,GAAEC,WAAD,IAAmB;AACjD,SAAO,MAAOC,QAAP,IAAuB;AAC1BA,IAAAA,QAAQ,CAACJ,mBAAmB,CAACK,gBAApB,CAAqC;AACzCC,MAAAA,MAAM,EAAC,SADkC;AAEzCC,MAAAA,KAAK,EAAC,OAFmC;AAGzCC,MAAAA,OAAO,EAAE;AAHgC,KAArC,CAAD,CAAR;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBP,WAAzB;;AACA,UAAMQ,OAAO,GAAE,YAAS;AACpB,YAAMC,QAAQ,GAAE,MAAMC,KAAK,CAAE,8BAA6BV,WAAW,CAACW,KAAM,GAAEX,WAAW,CAACY,QAAS,EAAxE,EAA0E;AACrGC,QAAAA,MAAM,EAAE,MAD6F;AAErGC,QAAAA,IAAI,EAAE;AAAC,mBAAQd,WAAW,CAACW,KAArB;AAA2BC,UAAAA,QAAQ,EAACZ,WAAW,CAACY;AAAhD;AAF+F,OAA1E,CAA3B;;AAIA,UAAG,CAACH,QAAQ,CAACM,EAAb,EAAgB;AACZ,cAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACH;AACJ,KARD;;AASA,QAAG;AACC,YAAMC,IAAI,GAAC,MAAMT,OAAO,EAAxB;AACAP,MAAAA,QAAQ,CAACH,WAAW,CAACoB,OAAZ,CAAoBD,IAApB,CAAD,CAAR;AACH,KAHD,CAGE,OAAME,KAAN,EAAY;AACVlB,MAAAA,QAAQ,CAACJ,mBAAmB,CAACK,gBAApB,CAAqC;AAC1CC,QAAAA,MAAM,EAAC,OADmC;AAE1CC,QAAAA,KAAK,EAAC,OAFoC;AAG1CC,QAAAA,OAAO,EAAE;AAHiC,OAArC,CAAD,CAAR;AAKH;AACJ,GA1BD;AA2BH,CA5BM","sourcesContent":["import {notificationActions} from \"./notification-slice\"\nimport { userActions } from \"./users-slice\";\nexport const getUserByCradentials=(cradentials:any)=>{\n    return async (dispatch:any) =>{\n        dispatch(notificationActions.showNotification({\n             status:'pending',\n             title:'check',\n             message: 'check user',\n        }))\n        console.log(\"user front\",cradentials);\n        const getData =async()=>{\n            const response= await fetch(`http://localhost:3005/user/${cradentials.email}${cradentials.password}`,{\n            method: 'POST',\n            body: {'email':cradentials.email,password:cradentials.password},\n            });            \n            if(!response.ok){\n                throw new Error('not able to get data!!! '); \n            }\n        }\n        try{\n            const user=await getData();\n            dispatch(userActions.getUser(user));\n        } catch(error){\n            dispatch(notificationActions.showNotification({\n                status:'error',\n                title:'error',\n                message: 'failed to find user',\n              }))\n        }\n    } \n}"]},"metadata":{},"sourceType":"module"}