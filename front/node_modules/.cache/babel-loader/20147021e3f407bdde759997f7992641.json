{"ast":null,"code":"var _jsxFileName = \"/Users/pavelshmilevich/Documents/Dev/Restaurant/front/src/Epicure/Epicure.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Footer from './components/Footer/Footer';\nimport Header from './components/Header/Header';\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport './Epicure.scss';\nimport Chefs from './components/Main/Chefs/Chefs';\nimport Home from './components/Main/Home/Home';\nimport Restaurants from './components/Main/Restaurants/Restaurants';\nimport Dishes from './components/Main/Restaurants/Dishes/Dishes';\nimport Auth from './auth/auth';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Notification from './components/Shared/Notification/Notification'; // import { postRestaurantsData, getRestaurantsData } from './store/restuarants.actions';\n\nimport { notificationActions } from './store/notification-slice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\n\nfunction Epicure() {\n  _s();\n\n  const auth = useSelector(state => state.auth.isAuth);\n  const restaurant = useSelector(state => state.restaurants.restaurant);\n  const notification = useSelector(state => state.notification.notification);\n  const dispatch = useDispatch(); //get restaurants\n\n  useEffect(() => {\n    // dispatch(getRestaurantsData);\n    const fetchDats = async () => {\n      const response = await fetch('http://localhost:3005/restaurants');\n\n      if (!response.ok) {\n        throw new Error('not able to get data!!! ');\n      }\n\n      const data = await response.json;\n      console.log(\"check \", data);\n      return data;\n    };\n\n    try {\n      const restaurants = fetchDats(); // dispatch(restaurantsActions.getRestaurants(restaurants));\n    } catch (error) {\n      dispatch(notificationActions.showNotification({\n        status: 'error',\n        title: 'error',\n        message: 'failed to add restaruant'\n      }));\n    }\n  }, [dispatch]); //post restaurnats\n\n  useEffect(() => {\n    // if(isInitial){\n    //   isInitial=false;\n    //   return;\n    // }\n    // dispatch(postRestaurantsData(restaurant));\n    dispatch(notificationActions.showNotification({\n      status: 'pending',\n      title: 'adding',\n      message: 'addin new restaurant'\n    }));\n\n    const postData = async () => {\n      const response = await fetch('http://localhost:3005/restaurants/postRestaurant', {\n        method: 'POST',\n        body: JSON.stringify(restaurant)\n      });\n\n      if (!response.ok) {\n        throw new Error('not able to get data!!! ');\n      }\n\n      const data = await response.json;\n      return data;\n    };\n\n    try {\n      postData();\n      dispatch(notificationActions.showNotification({\n        status: 'success',\n        title: 'success',\n        message: 'success to add  new restaurant'\n      }));\n    } catch (error) {\n      dispatch(notificationActions.showNotification({\n        status: 'error',\n        title: 'error',\n        message: 'failed to add restaruant'\n      }));\n    }\n  }, [restaurant, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Epicure\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n        status: notification.status,\n        title: notification.title,\n        message: notification.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          children: /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/auth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/auth\",\n          children: /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), auth && /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/home\",\n            children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/restaurants\",\n            exact: true,\n            children: /*#__PURE__*/_jsxDEV(Restaurants, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/restaurants/:restaurantId\",\n            children: /*#__PURE__*/_jsxDEV(Dishes, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/chefs\",\n            children: /*#__PURE__*/_jsxDEV(Chefs, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/*\",\n          exact: true,\n          children: /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/auth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Epicure, \"ZzJ+QbJBQNcAJ3WbDndf0vG9uYQ=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Epicure;\nexport default Epicure;\n\nvar _c;\n\n$RefreshReg$(_c, \"Epicure\");","map":{"version":3,"sources":["/Users/pavelshmilevich/Documents/Dev/Restaurant/front/src/Epicure/Epicure.tsx"],"names":["React","useEffect","Footer","Header","Route","Redirect","Switch","Chefs","Home","Restaurants","Dishes","Auth","useSelector","useDispatch","Notification","notificationActions","isInitial","Epicure","auth","state","isAuth","restaurant","restaurants","notification","dispatch","fetchDats","response","fetch","ok","Error","data","json","console","log","error","showNotification","status","title","message","postData","method","body","JSON","stringify"],"mappings":"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","sourcesContent":["import React,{useEffect} from 'react';\nimport Footer from './components/Footer/Footer';\nimport Header from './components/Header/Header';\nimport { Route,Redirect,Switch } from \"react-router-dom\";\nimport './Epicure.scss';\nimport Chefs from './components/Main/Chefs/Chefs';\nimport Home from './components/Main/Home/Home';\nimport Restaurants from './components/Main/Restaurants/Restaurants';\nimport Dishes from './components/Main/Restaurants/Dishes/Dishes';\nimport Auth from './auth/auth';\nimport {useSelector,useDispatch} from 'react-redux';\nimport Notification from './components/Shared/Notification/Notification';\n// import { postRestaurantsData, getRestaurantsData } from './store/restuarants.actions';\nimport restaurantsActions from \"./store/restaurants-slice\"\nimport {notificationActions} from './store/notification-slice';\n\nlet isInitial=true;\nfunction Epicure() {\n  const auth=useSelector((state:any) => state.auth.isAuth);\n  const restaurant=useSelector((state:any)=> state.restaurants.restaurant);\n  const notification=useSelector((state:any)=> state.notification.notification );\n  const dispatch=useDispatch();\n  //get restaurants\n  useEffect(()=>{\n    // dispatch(getRestaurantsData);\n    const fetchDats =async()=>{\n        const response= await fetch('http://localhost:3005/restaurants')\n        if(!response.ok){\n            throw new Error('not able to get data!!! '); \n          }\n        const data=await response.json;\n        console.log(\"check \",data);\n        return data;\n    }\n    try{\n        const restaurants= fetchDats();\n        // dispatch(restaurantsActions.getRestaurants(restaurants));\n    } catch(error){\n        dispatch(notificationActions.showNotification({\n            status:'error',\n            title:'error',\n            message: 'failed to add restaruant',\n          }))\n    }\n  },[dispatch])\n\n  //post restaurnats\n  useEffect(()=>{    // if(isInitial){\n    //   isInitial=false;\n    //   return;\n    // }\n    // dispatch(postRestaurantsData(restaurant));\n    dispatch(notificationActions.showNotification({\n      status:'pending',\n      title:'adding',\n      message: 'addin new restaurant',\n    }))\n    const postData =async()=>{\n        const response= await fetch('http://localhost:3005/restaurants/postRestaurant',{\n            method: 'POST',\n            body: JSON.stringify(restaurant),\n          });            \n          if(!response.ok){\n            throw new Error('not able to get data!!! '); \n          }\n        const data=await response.json;\n        return data;\n    }\n    try{\n        postData();\n        dispatch(notificationActions.showNotification({\n            status:'success',\n            title:'success',\n            message: 'success to add  new restaurant',\n        }))\n    } catch(error){\n        dispatch(notificationActions.showNotification({\n            status:'error',\n            title:'error',\n            message: 'failed to add restaruant',\n          }))\n    }\n  },[restaurant,dispatch])\n\n  \n  return (\n    <div className=\"Epicure\">\n      <Header/>\n      <main>\n        {notification && <Notification status={notification.status} title={notification.title} message={notification.message}/>}\n        <Switch>\n          <Route path=\"/\" exact><Redirect to=\"/auth\"/></Route>\n          <Route path=\"/auth\"><Auth/></Route>\n          {auth &&<section><Route path=\"/home\"><Home/></Route>\n          <Route path=\"/restaurants\" exact><Restaurants/></Route>\n          <Route path=\"/restaurants/:restaurantId\"><Dishes/></Route>\n          <Route path=\"/chefs\"><Chefs/></Route></section>}\n          <Route path=\"/*\" exact><Redirect to=\"/auth\"/></Route>\n        </Switch>\n      </main>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default Epicure\n"]},"metadata":{},"sourceType":"module"}