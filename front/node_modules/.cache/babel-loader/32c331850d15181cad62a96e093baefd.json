{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit'; // const initRestaurantsState = {restaurnats:[]}\n// const restaurantsSlice=createSlice({\n//     name:'resturants',\n//     initialState: initRestaurantsState,\n//     reducers:{\n//         getRestaurants(state){},\n//         getRestaurantByID(){},\n//         postRestaurant(){}\n//     }\n// })\n\nconst initAuthState = {\n  isAuth: falsee\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: initAuthState,\n  reducers: {\n    login(state) {\n      state.isAuth = true;\n    },\n\n    logout(state) {\n      state.isAuth = false;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    auth: authSlice.reducer\n  }\n}); // export const restaurantsActions= restaurantsSlice.actions;  \n\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"sources":["/Users/pavelshmilevich/Documents/Dev/Restaurant/front/src/Epicure/store/store.ts"],"names":["createSlice","configureStore","initAuthState","isAuth","falsee","authSlice","name","initialState","reducers","login","state","logout","store","reducer","auth","authActions","actions"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,cAApB,QAAyC,kBAAzC,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,aAAa,GAAG;AAACC,EAAAA,MAAM,EAACC;AAAR,CAAtB;AAEA,MAAMC,SAAS,GAACL,WAAW,CAAC;AACxBM,EAAAA,IAAI,EAAC,MADmB;AAExBC,EAAAA,YAAY,EAAEL,aAFU;AAGxBM,EAAAA,QAAQ,EAAC;AACLC,IAAAA,KAAK,CAACC,KAAD,EAAO;AACRA,MAAAA,KAAK,CAACP,MAAN,GAAa,IAAb;AACH,KAHI;;AAILQ,IAAAA,MAAM,CAACD,KAAD,EAAO;AACTA,MAAAA,KAAK,CAACP,MAAN,GAAa,KAAb;AACH;;AANI;AAHe,CAAD,CAA3B;AAcA,MAAMS,KAAK,GAACX,cAAc,CAAC;AACvBY,EAAAA,OAAO,EAAE;AAACC,IAAAA,IAAI,EAAET,SAAS,CAACQ;AAAjB;AADc,CAAD,CAA1B,C,CAIA;;AACA,OAAO,MAAME,WAAW,GAAEV,SAAS,CAACW,OAA7B;AACP,eAAeJ,KAAf","sourcesContent":["import {createSlice,configureStore} from '@reduxjs/toolkit'\n\n// const initRestaurantsState = {restaurnats:[]}\n\n// const restaurantsSlice=createSlice({\n//     name:'resturants',\n//     initialState: initRestaurantsState,\n//     reducers:{\n//         getRestaurants(state){},\n//         getRestaurantByID(){},\n//         postRestaurant(){}\n//     }\n// })\n\nconst initAuthState = {isAuth:falsee}\n\nconst authSlice=createSlice({\n    name:'auth',\n    initialState: initAuthState,\n    reducers:{\n        login(state){\n            state.isAuth=true;\n        },\n        logout(state){\n            state.isAuth=false;\n        }\n    } \n})\n\n \nconst store=configureStore({\n    reducer: {auth: authSlice.reducer},\n});\n\n// export const restaurantsActions= restaurantsSlice.actions;  \nexport const authActions= authSlice.actions;  \nexport default store;\n\n\n"]},"metadata":{},"sourceType":"module"}