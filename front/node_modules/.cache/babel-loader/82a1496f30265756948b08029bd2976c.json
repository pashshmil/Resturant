{"ast":null,"code":"var _jsxFileName = \"/Users/pavelshmilevich/Documents/Dev/Restaurant/front/src/Epicure/components/Main/Restaurants/Restaurants.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './Restaurants.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Restaurants() {\n  _s();\n\n  const [restaurants, setRestaurants] = useState([]);\n  const [chefs, setChefs] = useState([]);\n  useEffect(() => {\n    const fetchChefs = async () => {\n      const response = await fetch('http://localhost:3005/chefs');\n      const responseData = await response.json();\n      setChefs(responseData);\n    };\n\n    const fetchRestaurants = async () => {\n      const response = await fetch('http://localhost:3005/restaurants');\n      const responseData = await response.json(); // console.log(\"restaurant \",responseData);\n      // console.log(\"chef 2\",chefs);\n\n      responseData.map(item => {\n        for (let chef of chefs) {\n          if (chef.id === item.chef_id) {\n            console.log(\"res check \", restaurants);\n            setRestaurants(currentArray => [...currentArray, {\n              id: item.id,\n              name: item.name,\n              chef: chef.name,\n              src: item.src\n            }]);\n          }\n        }\n      });\n    };\n\n    fetchChefs();\n    fetchRestaurants(); // restaurantsJson.map((item) => {\n    //   for (let chef of chefsJson) {\n    //     if (chef.id === item.chef_id) {\n    //       setRestaurants((currentArray:any) => [...currentArray, { id:item.id,name: item.name, chef: chef.name,src:item.src }])\n    //     }\n    //   }\n    // });\n  }, [restaurants]); // function Check(event:any){\n  //   console.log(\"event \",event.target.value);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cards\",\n    children: restaurants.length > 0 && restaurants.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"section\", {}, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Restaurants, \"Vr8sqtR/UfuUPZAhRwUd0qD+O1Q=\");\n\n_c = Restaurants;\nexport default Restaurants;\n\nvar _c;\n\n$RefreshReg$(_c, \"Restaurants\");","map":{"version":3,"sources":["/Users/pavelshmilevich/Documents/Dev/Restaurant/front/src/Epicure/components/Main/Restaurants/Restaurants.tsx"],"names":["React","useEffect","useState","Restaurants","restaurants","setRestaurants","chefs","setChefs","fetchChefs","response","fetch","responseData","json","fetchRestaurants","map","item","chef","id","chef_id","console","log","currentArray","name","src","length","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,oBAAP;;;AAQA,SAASC,WAAT,GAAuB;AAAA;;AACrB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCH,QAAQ,CAAwD,EAAxD,CAA9C;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAW,EAAX,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,UAAU,GAAC,YAAS;AACxB,YAAMC,QAAQ,GAAC,MAAMC,KAAK,CAAC,6BAAD,CAA1B;AACA,YAAMC,YAAY,GAAC,MAAMF,QAAQ,CAACG,IAAT,EAAzB;AACAL,MAAAA,QAAQ,CAACI,YAAD,CAAR;AACD,KAJD;;AAKA,UAAME,gBAAgB,GAAC,YAAS;AAC9B,YAAMJ,QAAQ,GAAC,MAAMC,KAAK,CAAC,mCAAD,CAA1B;AACA,YAAMC,YAAY,GAAC,MAAMF,QAAQ,CAACG,IAAT,EAAzB,CAF8B,CAG9B;AACA;;AACAD,MAAAA,YAAY,CAACG,GAAb,CAAkBC,IAAD,IAAqB;AACpC,aAAK,IAAIC,IAAT,IAAiBV,KAAjB,EAAwB;AACtB,cAAIU,IAAI,CAACC,EAAL,KAAYF,IAAI,CAACG,OAArB,EAA8B;AAC5BC,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBhB,WAAzB;AACAC,YAAAA,cAAc,CAAEgB,YAAD,IAAsB,CAAC,GAAGA,YAAJ,EAAkB;AAAEJ,cAAAA,EAAE,EAACF,IAAI,CAACE,EAAV;AAAaK,cAAAA,IAAI,EAAEP,IAAI,CAACO,IAAxB;AAA8BN,cAAAA,IAAI,EAAEA,IAAI,CAACM,IAAzC;AAA8CC,cAAAA,GAAG,EAACR,IAAI,CAACQ;AAAvD,aAAlB,CAAvB,CAAd;AACD;AACF;AACF,OAPD;AAQD,KAbD;;AAcAf,IAAAA,UAAU;AACVK,IAAAA,gBAAgB,GArBF,CAuBd;AACA;AACA;AACA;AACA;AACA;AACA;AAED,GA/BQ,EA+BN,CAACT,WAAD,CA/BM,CAAT,CAHqB,CAoCrB;AACA;AACA;;AACA,sBACA;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cACGA,WAAW,CAACoB,MAAZ,GAAqB,CAArB,IACCpB,WAAW,CAACU,GAAZ,CAAgB,CAACC,IAAD,EAAOU,KAAP,KAAiB;AAC/B,0BACE,uBAAcA,KAAd;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KAND;AAFJ;AAAA;AAAA;AAAA;AAAA,UADA;AAYD;;GAnDQtB,W;;KAAAA,W;AAoDT,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './Restaurants.scss';\nimport restaurantsJson from \"../../../../assets/data/restaurants.json\";\nimport chefsJson from \"../../../../assets/data/chefs.json\";\nimport RestaurantCard from \"../../Shared/Cards/RestaurantCard\";\nimport ChefOfWeek from \"../Home/ChefOfWeek/ChefOfWeek\";\nimport Chef from \"../../../types/Chef\";\nimport Restaurant from \"../../../types/Restaurant\";\n\nfunction Restaurants() {\n  const [restaurants, setRestaurants] = useState<{ id:number,name: string, chef: string,src:string }[]>([]);\n  const [chefs, setChefs] = useState< Chef []>([]);\n  useEffect(() => {\n    const fetchChefs=async()=>{\n      const response=await fetch('http://localhost:3005/chefs');\n      const responseData=await response.json();\n      setChefs(responseData);\n    }\n    const fetchRestaurants=async()=>{\n      const response=await fetch('http://localhost:3005/restaurants');\n      const responseData=await response.json();\n      // console.log(\"restaurant \",responseData);\n      // console.log(\"chef 2\",chefs);\n      responseData.map((item:Restaurant) => {\n        for (let chef of chefs) {\n          if (chef.id === item.chef_id) {\n            console.log(\"res check \",restaurants);\n            setRestaurants((currentArray:any) => [...currentArray, { id:item.id,name: item.name, chef: chef.name,src:item.src }])\n          }\n        }\n      });\n    }\n    fetchChefs();\n    fetchRestaurants();\n    \n    // restaurantsJson.map((item) => {\n    //   for (let chef of chefsJson) {\n    //     if (chef.id === item.chef_id) {\n    //       setRestaurants((currentArray:any) => [...currentArray, { id:item.id,name: item.name, chef: chef.name,src:item.src }])\n    //     }\n    //   }\n    // });\n    \n  }, [restaurants]);\n\n  // function Check(event:any){\n  //   console.log(\"event \",event.target.value);\n  // }\n  return (\n  <div className=\"cards\">\n    {restaurants.length > 0 &&\n      restaurants.map((item, index) => {\n        return (\n          <section key={index}>\n            {/* <RestaurantCard  name={item.name} chef={item.chef} src={item.src} id={item.id} /> */}\n          </section>\n        );\n      })}\n  </div>\n  )\n}\nexport default Restaurants\n"]},"metadata":{},"sourceType":"module"}